<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Collaboration on Rayyan Shaik</title>
    <link>https://rayyanshaik.com/tags/collaboration/</link>
    <description>Recent content in Collaboration on Rayyan Shaik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 07 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://rayyanshaik.com/tags/collaboration/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mathematical Expression Evaluator</title>
      <link>https://rayyanshaik.com/timeline/calculator/</link>
      <pubDate>Wed, 07 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://rayyanshaik.com/timeline/calculator/</guid>
      <description>Description This repository features 2 programs that can solve mathematical expressions. Both projects were planned and thought out before writing, and my partner, Andrew Diab, and I each wrote one implementation. The first one, under the subdirectory /Dijkstra was completed by Andrew Diab - this implements the Shunting-Yard Algorithm by Edsger Dijkstra, and the simpleSolve() method created by myself. I created the second implementation found under the subdirectory Recursive. This program contains a class which can solve unordered mathematical expressions folling PEMDAS (no brackets or parentheses) under the method simpleSolve().</description>
    </item>
    
    <item>
      <title>Agent-Maze Environment</title>
      <link>https://rayyanshaik.com/timeline/agent-maze/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://rayyanshaik.com/timeline/agent-maze/</guid>
      <description>Description A project developed by WPS Lakerbotics Programming Team, designed as a testing environment for pathfinding &amp;ldquo;agent&amp;rdquo; algorithms.
Github Repository The Github repository can be found here
What were my goals with this project? Practice advanced manipulation of 2d arrays Practice GUI efficiency Minimalist and attractive graphics Object-Oriented approach Object reading and writing with pickle library Project Images Dependencies Pygame Numpy Pickle Agent-Maze-Environment README.md Creating a map Run builder.py When finished, press the &amp;ldquo;enter&amp;rdquo; key to save map to &amp;lsquo;map.</description>
    </item>
    
    <item>
      <title>Lakerbotics 2020 Code</title>
      <link>https://rayyanshaik.com/timeline/lakerbotics2020/</link>
      <pubDate>Sun, 08 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://rayyanshaik.com/timeline/lakerbotics2020/</guid>
      <description>Description Lakerbotics-1649&amp;rsquo;s robot code, written in java. This code was created from base to suit our robot&amp;rsquo;s needs and the challenge&amp;rsquo;s (Infinite Recharge) demands. Months of testing and research was spent learning the libraries required, and the &amp;ldquo;final version&amp;rdquo; of the robot code was developed over nearly 2 months. I have written the majority of this code (under the Lakerbotics Github account), and the overall project was a group effort with 2 other team members.</description>
    </item>
    
  </channel>
</rss>
