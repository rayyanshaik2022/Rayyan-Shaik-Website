<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>featured on Rayyan Shaik</title>
    <link>rayyanshaik2022.github.io/Rayyan-Shaik-Website/tags/featured/</link>
    <description>Recent content in featured on Rayyan Shaik</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 09 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="rayyanshaik2022.github.io/Rayyan-Shaik-Website/tags/featured/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Simple Dungeon Game</title>
      <link>rayyanshaik2022.github.io/Rayyan-Shaik-Website/blog/simple-dungeon/</link>
      <pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>rayyanshaik2022.github.io/Rayyan-Shaik-Website/blog/simple-dungeon/</guid>
      <description>Description A showcase-esque project designed to demonstrate an improved understanding of sockets and client/network relationships. This was created in pure python with no game engines (such as Unity), everything from buttons, to servers, to the physics was created from scratch. This is not a complete game, but includes complete portions of one - a main menu screen, working (not much playable content) game, and a level editor. This project features complex gui components created from scratch, such as buttons and text boxes.</description>
    </item>
    
    <item>
      <title>Agar.io Clone</title>
      <link>rayyanshaik2022.github.io/Rayyan-Shaik-Website/blog/agario/</link>
      <pubDate>Sun, 19 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>rayyanshaik2022.github.io/Rayyan-Shaik-Website/blog/agario/</guid>
      <description>Description A complete, scalable clone of the popular web game, agar.io. This project was created purely in python, and utilizes the pygame (GUI) and sockets (web connection) libraries. There are 2 main files used to run code. The first is client.py, which runs the game itself. The second is server.py, which can be run on any network and can open a customizable &amp;ldquo;agar.io&amp;rdquo; server on any port. This game is playable online, and through local networks.</description>
    </item>
    
    <item>
      <title>Smart Rockets</title>
      <link>rayyanshaik2022.github.io/Rayyan-Shaik-Website/blog/smart-rockets/</link>
      <pubDate>Wed, 15 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>rayyanshaik2022.github.io/Rayyan-Shaik-Website/blog/smart-rockets/</guid>
      <description>Description This program is a demonstration of a genetic algorithm, with the use of &amp;ldquo;rockets&amp;rdquo; drawn as rectangles. Each &amp;ldquo;rocket&amp;rdquo; has its own dna telling them random directions to accelerate towards. Rockets effectively gain a higher (better) fitness the closer they are to the goal (green circle) and lose fitness (worse) if they try and go out of bounds or hit a boundary. In the scope of the genetic algorithm, these fitness scores are used to create the next &amp;ldquo;generation&amp;rdquo; of rocket which favors (not absolute) to combine dna of the top performing rockets.</description>
    </item>
    
    <item>
      <title>Perlin Noise Map Generator</title>
      <link>rayyanshaik2022.github.io/Rayyan-Shaik-Website/blog/perlinmap/</link>
      <pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>rayyanshaik2022.github.io/Rayyan-Shaik-Website/blog/perlinmap/</guid>
      <description>Description A map generating script primarly using the perlin noise equations. This program utilizes a the 2d perlin noise equation to generate topographic values in a 2d list. These values are normalized and assigned a &amp;ldquo;color output&amp;rdquo; depending on their value (for example, a low value would mean blue or water, while a high value might be grey for mountains). This program also uses poisson disc sampling to randomly generate trees across the landmasses.</description>
    </item>
    
    <item>
      <title>Lakerbotics 2020 Code</title>
      <link>rayyanshaik2022.github.io/Rayyan-Shaik-Website/blog/lakerbotics2020/</link>
      <pubDate>Sun, 08 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>rayyanshaik2022.github.io/Rayyan-Shaik-Website/blog/lakerbotics2020/</guid>
      <description>Description Lakerbotics-1649&amp;rsquo;s robot code, written in java. This code was created from base to suit our robot&amp;rsquo;s needs and the challenge&amp;rsquo;s (Infinite Recharge) demands. Months of testing and research was spent learning the libraries required, and the &amp;ldquo;final version&amp;rdquo; of the robot code was developed over nearly 2 months. I have written the majority of this code (under the Lakerbotics Github account), and the overall project was a group effort with 2 other team members.</description>
    </item>
    
  </channel>
</rss>
