<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Rayyan Shaik</title>
    <link>/</link>
    <description>Recent content in Home on Rayyan Shaik</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 16 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to navigate this website</title>
      <link>/sections/aboutme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/sections/aboutme/</guid>
      <description>Click on the &amp;ldquo;Menu&amp;rdquo; button at top left to view each category
 Home: Website&amp;rsquo;s home page About Me: Information about myself and programming experience Projects: View my recently complete projects and summaries.
You can click on a project&amp;rsquo;s name to view it&amp;rsquo;s contents.  </description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>I am Rayyan Shaik, a 16 year old Junior at Windermere Preparatory School. Programming is something I&amp;rsquo;m very passionate about, and a skill that I had started learning during my years in middle school. Since then, I have completed AP Computer Science, a cybersecurity summer course at Embry Riddle, and I am also currently enrolled in IB Computer Science (Higher Level). I am also an active participat in my school&amp;rsquo;s programming club, as well as the co-president and lead programmer for FRC (First Robotics Competition) Team 1649.</description>
    </item>
    
    <item>
      <title>Velociraptor Bot</title>
      <link>/blog/velociraptorbot/</link>
      <pubDate>Sun, 16 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/velociraptorbot/</guid>
      <description>Description A multi-purpose discord bot to be used on a private server with my friends. This bot provides basic security for our server with an easily customizable verification system. Important e-learnig and virtual learning commands that can reply with my school&amp;rsquo;s schedule and per class zoom links. The bot can also join voice channels and play different sound effects stored as .mp3 files.
Github Repository The Github repository can be found here</description>
    </item>
    
    <item>
      <title>Simple Dungeon</title>
      <link>/blog/simple-dungeon/</link>
      <pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/simple-dungeon/</guid>
      <description>Description A showcase-esque project designed to demonstrate an improved understanding of sockets and client/network relationships. This is not a complete game, but includes complete portions of one - a main menu screen, working (not much playable content) game, and a level editor. This project features complex gui components created from scratch, such as buttons and text boxes.
Github Repository The Github repository can be found here
What were my goals with this project?</description>
    </item>
    
    <item>
      <title>Agar.io Clone</title>
      <link>/blog/agario/</link>
      <pubDate>Sun, 19 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/agario/</guid>
      <description>Description A complete, scalable clone of the popular web game, agar.io. This project was created purely in python, and utilizes the pygame (GUI) and sockets (web connection) libraries. There are 2 main files used to run code. The first is client.py, which runs the game itself. The second is server.py, which can be run on any network and can open a customizable &amp;ldquo;agar.io&amp;rdquo; server on any port. This game is playable online, and through local networks.</description>
    </item>
    
    <item>
      <title>Boids Flocking Algorithm</title>
      <link>/blog/boids-flocking/</link>
      <pubDate>Sun, 12 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/boids-flocking/</guid>
      <description>Description My implementation of the boids flocking algorithm in pygame. It uses arrows - representative of birds - as enties that move around and account for each other&amp;rsquo;s positions. Some additional features that I implemented include an &amp;ldquo;infinite border&amp;rdquo; - meaning borders transport entities to opposite ends of the map. The entities also spawn with random hues (color), and when several enities converge into a group, their colors average out. When these groups disband, the entities slowly revert to their original color.</description>
    </item>
    
    <item>
      <title>Lakerbotics 2020 Code</title>
      <link>/blog/lakerbotics2020/</link>
      <pubDate>Sun, 08 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/lakerbotics2020/</guid>
      <description>Description Lakerbotics-1649&amp;rsquo;s robot code, written in java. This code was created from base to suit our robot&amp;rsquo;s needs and the challenge&amp;rsquo;s (Infinite Recharge) demands. Months of testing and research was spent learning the libraries required, and the &amp;ldquo;final version&amp;rdquo; of the robot code was developed over nearly 2 months. I have written the majority of this code (under the Lakerbotics Github account), and the overall project was a group effort with 2 other team members.</description>
    </item>
    
    <item>
      <title>Autoclickr</title>
      <link>/blog/autoclickr/</link>
      <pubDate>Fri, 28 Jun 2019 12:39:56 +0100</pubDate>
      
      <guid>/blog/autoclickr/</guid>
      <description>Description A complete GUI environment designed to test grid/maze solving algorithms. Complete with a GUI environment builder.
Github Repository The Github repository can be found here
What were my goals with this project?  Create a fast and reliable auto clicker Have the script be easy to use and interact with Make the driver code relatively simple for easy changes  Driver code from autoclickr import Autoclickr mult = int(input(&amp;#34;Scale value (threads to be opened): &amp;#34;)) clicker = Autoclickr(True, 0, &amp;#39;left&amp;#39;, &amp;#39;right&amp;#39;,scaled=mult, clickType=0) clicker.</description>
    </item>
    
    <item>
      <title>Agent-Maze Environment</title>
      <link>/blog/agent-maze/</link>
      <pubDate>Fri, 26 Apr 2019 12:39:56 +0100</pubDate>
      
      <guid>/blog/agent-maze/</guid>
      <description>Description A project developed by WPS Lakerbotics Programming Team, designed as a testing environment for pathfinding &amp;ldquo;agent&amp;rdquo; algorithms.
Github Repository The Github repository can be found here
What were my goals with this project?  Practice advanced manipulation of 2d arrays Practice GUI efficiency Minimalist and attractive graphics Object-Oriented approach Object reading and writing with pickle library  Dependencies  Pygame Numpy Pickle  Agent-Maze-Environment README.md Creating a map  Run builder.</description>
    </item>
    
    <item>
      <title>Rich Content</title>
      <link>/blog/rich_content/</link>
      <pubDate>Thu, 28 Mar 2019 12:42:22 +0100</pubDate>
      
      <guid>/blog/rich_content/</guid>
      <description>Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.
 Instagram Simple Shortcode .__h_instagram.card { font-family: -apple-system,BlinkMacSystemFont,&#34;Segoe UI&#34;,Roboto,Oxygen-Sans,Ubuntu,Cantarell,&#34;Helvetica Neue&#34;,sans-serif; font-size: 14px; border: 1px solid rgb(219, 219, 219); padding: 0; margin-top: 30px; } .__h_instagram.card .card-header, .__h_instagram.card .card-body { padding: 10px 10px 10px; } .__h_instagram.card img { width: 100%; height: auto; }  koloot.</description>
    </item>
    
    <item>
      <title>Placeholder</title>
      <link>/blog/placeholder/</link>
      <pubDate>Thu, 28 Mar 2019 12:41:07 +0100</pubDate>
      
      <guid>/blog/placeholder/</guid>
      <description>Mole et vultus populifer quaque primoque non Lorem est tota propiore conpellat pectoribus de pectora summo. Redit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.
 Exierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude  Rursus nulli murmur; hastile inridet ut ab gravi sententia!</description>
    </item>
    
    <item>
      <title>Markdown</title>
      <link>/blog/markdown/</link>
      <pubDate>Thu, 28 Mar 2019 12:39:56 +0100</pubDate>
      
      <guid>/blog/markdown/</guid>
      <description>&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emojis</title>
      <link>/blog/emojis/</link>
      <pubDate>Thu, 28 Mar 2019 12:24:47 +0100</pubDate>
      
      <guid>/blog/emojis/</guid>
      <description>Emoji can be enabled in a Hugo project in a number of ways. The emojify function can be called directly in templates or Inline Shortcodes.
To enable emoji globally, set enableEmoji to true in your siteâ€™s configuration and then you can type emoji shorthand codes directly in content files; e.g.
The Emoji cheat sheet is a useful reference for emoji shorthand codes.
 N.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform.</description>
    </item>
    
  </channel>
</rss>
